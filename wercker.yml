box: pei0804/gae-go-deploy
build:
  after-steps:
      - slack-notifier:
          url: $SLACK_WEBHOOK_URL
          channel: notification
          username: github
  steps:
  - script:
      name: ソースの場所を保存する
      code: |-
        : ${SERVER:="./go/src/app"}
        : ${CLIENT:="./client"}
        : ${GAE:="./gae"}
  - script:
      name: GOROOTのパッケージに一般ユーザーからの書き込みの許可
      code: |
        sudo chmod -R a+w `goapp env GOROOT`/pkg
  - script:
      name: versionをチェックする
      code: |
        goapp version
        go version
  - script:
      name: install command
      code: |
        GOROOT=/usr/local/go go get -u github.com/golang/dep/...
        GOROOT=/usr/local/go go get -u github.com/alecthomas/gometalinter/...
        gometalinter --install --update --force
  - script:
      name: set env
      code: |
        export GOPATH="$(pwd)/go:$WERCKER_SOURCE_DIR"
        goapp env GOPATH
        export repo="app"
  - script:
      name: check env
      code: |
        env
  - script:
      cwd: ${SERVER}
      name: depで依存パッケージをインストールする
      code: |
        dep ensure
        dep status
  - script:
      name: check command
      code: |
        ls /usr/local/go_appengine/gopath/bin
  - script:
      cwd: ${SERVER}
      name: goagenでコード生成する
      code: |
        (cd vendor/github.com/goadesign/goa/goagen && GOROOT=/usr/local/go go get && GOROOT=/usr/local/go go build)
        ./vendor/github.com/goadesign/goa/goagen/goagen version
        ./vendor/github.com/goadesign/goa/goagen/goagen app -d ${repo}/design
        ./vendor/github.com/goadesign/goa/goagen/goagen client -d ${repo}/design
        ./vendor/github.com/goadesign/goa/goagen/goagen swagger -d ${repo}/design -o server
  - script:
      cwd: ${SERVER}
      name: lint
      code: |
        gometalinter ./... --config=lint_config.json
  - script:
      name: フロントエンドのinstall build
      cwd: ${CLIENT}
      code: |
        npm install --no-optional
        npm run build
  - script:
      name: envを本番用のものを設定する
      code: |
        cp -f ${SERVER}/server/env.yaml.production ${SERVER}/server/env.yaml
  - script:
      cwd: ${SERVER}/server
      name: goapp build
      code: |
        goapp build
  - script:
      cwd: ${SERVER}
      name: goapp test
      code: |
        goapp test .
  - script:
      cwd: ${SERVER}
      name: サーバーサイドのコードを$WERCKER_OUTPUT_DIRへ
      code: |-
        rsync -avz ${GOPATH%%:*}/ $WERCKER_OUTPUT_DIR
deploy:
  steps:
  - script:
      name: set env(deployツールの仕様対応)
      code: |
        export WERCKER_GIT_DOMAIN=""
        export WERCKER_GIT_OWNER=""
        export WERCKER_GIT_REPOSITORY="app"
  - script:
      name: check env
      code: |
        env
  - script:
    name: deploy info
    code: find .
  - michilu/go-appengine-deploy:
    token: $APP_ENGINE_TOKEN
